import duckdb
from pathlib import Path

# üìÅ Rutas base
base_path = Path(__file__).resolve().parents[2]
parquet_path = base_path / "data" / "exploitation" / "meteogalicia_estaciones"
output_csv_path = base_path / "csv_duckdb"
output_csv_path.mkdir(exist_ok=True)

# ü¶Ü Conectar con DuckDB
con = duckdb.connect()

# üìä KPI 1: N√∫mero de estaciones por provincia
query_prov = f"""
    SELECT provincia, COUNT(*) AS n_estaciones
    FROM read_parquet('{parquet_path}/**/*.parquet', hive_partitioning=TRUE)
    GROUP BY provincia
    ORDER BY n_estaciones DESC
"""
df_prov = con.execute(query_prov).fetchdf()
df_prov.to_csv(output_csv_path / "kpi_duckdb_provincia.csv", index=False)
print("‚úÖ KPI por provincia guardado como CSV.")

# üìä KPI 2: N√∫mero de estaciones por concello y provincia
query_concello = f"""
    SELECT provincia, concello, COUNT(*) AS n_estaciones
    FROM read_parquet('{parquet_path}/**/*.parquet', hive_partitioning=TRUE)
    GROUP BY provincia, concello
    ORDER BY provincia, n_estaciones DESC
"""
df_concello = con.execute(query_concello).fetchdf()
df_concello.to_csv(output_csv_path / "kpi_duckdb_concello.csv", index=False)
print("‚úÖ KPI por concello guardado como CSV.")

# üëÄ Vista r√°pida en consola
print("\n‚ñ∂Ô∏è Estaciones por provincia:")
print(df_prov.head())

print("\n‚ñ∂Ô∏è Estaciones por concello:")
print(df_concello.head())








